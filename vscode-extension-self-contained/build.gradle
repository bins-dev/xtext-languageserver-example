tasks.register('copyApplication', Sync) {
    def installDistTask = project(':org.xtext.example.mydsl.ide').tasks.installDist
    dependsOn installDistTask
    from installDistTask.outputs
    into 'src/mydsl'
}

clean {
    doLast {
        delete copyApplication.outputs
    }
}

npmInstall.dependsOn copyApplication

tasks.register('installExtension', Exec) {
    dependsOn vscodeExtension
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'code.cmd'
    } else {
        commandLine 'code'
    }
    args '--install-extension', vscodeExtension.destPath
}

tasks.register('startCode', Exec) {
    dependsOn installExtension
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'code.cmd'
    } else {
        commandLine 'code'
    }
    args "$rootProject.projectDir/demo/", '--new-window'
}

task publish(dependsOn: vscodeExtension, type: NodeTask) {
    script = file("$rootProject.projectDir/node_modules/vsce/out/vsce")
    args = [ 'publish', '-p', System.getenv('ACCESS_TOKEN'), "--packagePath", "${project.buildDir}/vscode/vscode-extension-self-contained-${project.version}.vsix"]
    execOverrides {
        workingDir = projectDir
    }
}